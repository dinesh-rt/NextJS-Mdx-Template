[{"slug":"getting-started-with-mdx","title":"Getting Started with MDX in Next.js","date":"2024-04-01","tags":["mdx","next.js","react"],"categories":["Tutorial"],"tagSlugs":["mdx","next.js","react"],"content":"\n# Getting Started with MDX in Next.js\n\nWelcome to this tutorial on using MDX with Next.js! MDX allows you to use JSX in your markdown content, giving you the full power of React components in your blog posts.\n\n## What is MDX?\n\nMDX is a format that lets you seamlessly write JSX in your Markdown documents. It's a powerful way to add dynamic content and components to your otherwise static Markdown.\n\n## Basic Markdown Still Works\n\nYou can still use all the standard Markdown features:\n\n- **Bold text** and *italic text*\n- Lists (like this one!)\n- [Links](https://mdxjs.com/)\n- And more!\n\n## Using React Components\n\nBut now you can also include React components directly in your content!\n\nimport { Counter } from '../components/Counter'\n\n<Counter />\n\nCool, right? This is a React component embedded right in our MDX!\n\n## Code Blocks\n\nMDX also supports syntax highlighting in code blocks:\n\n```javascript\nfunction greet(name) {\n  return `Hello, ${name}!`;\n}\n\nconsole.log(greet('MDX User'));\n```\n\n## Linking to Other Posts\n\nOne of the great features we've implemented is the ability to link to other posts using double square brackets. For example:\n\n- Check out our post on [[customize-favicon]]\n- Learn about [[must-know-markdown-skills]]\n\nThese will automatically be converted to proper links!\n\n## Using Custom Components\n\nWe can define and use custom components to enhance our posts. For example, let's use a custom `InfoBox` component:\n\nimport InfoBox from '../components/InfoBox'\n\n<InfoBox>\n  This is a custom InfoBox component. You can use it to highlight important information in your posts!\n</InfoBox>\n\n## Conclusion\n\nMDX combines the simplicity of Markdown with the power of React, allowing you to create rich, interactive blog posts. Experiment with it and see what you can create!\n\nexport default ({ children }) => <div className=\"mdx-post\">{children}</div>"},{"slug":"must-know-markdown-skills","title":"Must-Know Markdown Skills","date":"2024-03-30","tags":["markdown","tutorial","web development"],"categories":["Tutorial"],"tagSlugs":["markdown","tutorial","web-development"],"content":"\n# Must-Know Markdown Skills\n\nMarkdown is a lightweight markup language that you can use to add formatting elements to plaintext text documents. In this post, we'll cover some essential Markdown skills that every writer should know.\n\n## 1. Headers\n\nYou can create headers using the `#` symbol. The number of `#` symbols indicates the header level:\n\n# Header 1\n## Header 2\n### Header 3\n\n## 2. Emphasis\n\nYou can add emphasis to your text using asterisks or underscores:\n\n*This text will be italic*\n_This will also be italic_\n\n**This text will be bold**\n__This will also be bold__\n\n***You can combine them***\n\n## 3. Lists\n\n### Unordered Lists\n\nYou can create unordered lists using asterisks, plus signs, or hyphens:\n\n* Item 1\n* Item 2\n  * Subitem 2.1\n  * Subitem 2.2\n\n### Ordered Lists\n\nFor ordered lists, simply use numbers:\n\n1. First item\n2. Second item\n3. Third item\n   1. Subitem 3.1\n   2. Subitem 3.2\n\n## 4. Links\n\nYou can create links using square brackets for the link text and parentheses for the URL:\n\n[Visit OpenAI](https://www.openai.com)\n\nYou can also add title text to links:\n\n[Visit Google](https://www.google.com \"Google's Homepage\")\n\n## 5. Images\n\nTo add an image, use an exclamation mark, followed by alt text in brackets, and the path or URL to the image in parentheses:\n\n<img src=\"/images/graph.jpeg\" alt=\"Alt text for the image\" />\n\nTo center an image, we need to use HTML:\n\n## 6. Code\n\nFor inline code, use backticks:\n\nUse the `print()` function in Python.\n\nFor code blocks, use triple backticks:\n\n```markdown\ndef greet(name):\n    print(f\"Hello, {name}!\")\n\ngreet(\"World\")\n```\n\n## 7. Blockquotes\n\nTo create a blockquote, use the `>` symbol:\n\n> This is a blockquote.\n> It can span multiple lines.\n>\n> It can also have multiple paragraphs.\n\n## 8. Horizontal Rules\n\nYou can create horizontal rules using three or more hyphens, asterisks, or underscores:\n\n---\n\n## 9. Tables\n\nYou can create tables using pipes and hyphens:\n\n| Header 1 | Header 2 | Header 3 |\n|----------|----------|----------|\n| Row 1, Col 1 | Row 1, Col 2 | Row 1, Col 3 |\n| Row 2, Col 1 | Row 2, Col 2 | Row 2, Col 3 |\n\n## 10. Task Lists\n\nYou can create task lists using brackets with a space or an 'x':\n\n- [x] Write the press release\n- [ ] Update the website\n- [ ] Contact the media\n\n\n## 12. Strikethrough\n\nYou can strike through text using two tildes:\n\n~~This text is no longer valid~~\n\n## Conclusion\n\nThese are some of the most commonly used Markdown features. By mastering these, you'll be able to create well-formatted documents quickly and easily. Remember, the exact rendering of Markdown can vary depending on the platform or processor you're using, so always preview your work!\n\nHappy Markdown writing!"},{"slug":"customize-favicon","title":"Customize the Favicon","date":"2023-09-17","categories":["Tutorial"],"tags":["customization","favicon"],"tagSlugs":["customization","favicon"],"content":"\nThe favicon is the small icon displayed in the browser's address bar and tabs. This guide will show you how to customize the favicon for your Chirpy site.\n\n## Steps to Change the Favicon\n\n1. **Prepare Your Favicon**\n   Create your favicon image. It's recommended to have multiple sizes for different devices. You can use tools like [Favicon Generator](https://realfavicongenerator.net/) to create a full set of favicons.\n\n2. **Replace Existing Favicon Files**\n   Navigate to `assets/img/favicons/` in your Chirpy project directory. Replace the existing files with your new favicon files.\n\n3. **Update `safari-pinned-tab.svg`**\n   If you're using a custom SVG for the Safari pinned tab, replace the existing file with your new SVG.\n\n4. **Modify `_includes/favicons.html`**\n   If your new favicons have different filenames or you've added new sizes, update this file accordingly.\n\n   ```html\n   <link rel=\"apple-touch-icon\" sizes=\"180x180\" href=\"{{ '/assets/img/favicons/apple-touch-icon.png' | relative_url }}\">\n   <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href=\"{{ '/assets/img/favicons/favicon-32x32.png' | relative_url }}\">\n   <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href=\"{{ '/assets/img/favicons/favicon-16x16.png' | relative_url }}\">\n   <link rel=\"manifest\" href=\"{{ '/assets/img/favicons/site.webmanifest' | relative_url }}\">\n   <link rel=\"shortcut icon\" href=\"{{ '/assets/img/favicons/favicon.ico' | relative_url }}\">"},{"slug":"getting-started","title":"Getting Started with Chirpy","date":"2023-09-15","categories":["Tutorial"],"tags":["chirpy","setup"],"tagSlugs":["chirpy","setup"],"content":"\nWelcome to Chirpy! This guide will help you set up your new blog using the Chirpy theme.\n\n[Link to next step](/posts/customize-favicon)\n\n## Installation\n\n1. Clone the Chirpy repository:\n   ```bash\n   git clone https://github.com/cotes2020/jekyll-theme-chirpy.git"}]